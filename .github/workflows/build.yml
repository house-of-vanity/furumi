name: Build and publish
on:
  push:
    tags:
    - 'v*'

jobs:
  make_bin:
    name: Build binary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Pre-build
        run: sudo apt install -y libfuse-dev # pkg-config
      - uses: actions/checkout@v2
      - name: Build binary
        run: cargo build --release
      - name: Upload binary
        uses: actions/upload-artifact@v1
        with:
          name: furumi
          path: ./target/release/furumi
  make_arch:
      name: Make Arch Linux package
      runs-on: ubuntu-latest
      container:
        image: archlinux
        options: --privileged
        volumes:
          - /sys/fs/cgroup:/sys/fs/cgroup
      steps:
        - uses: actions/checkout@v2
        - name: Build Arch Linux package
          uses: house-of-vanity/build-arch-package@master
          with:
            PKGBUILD: $GITHUB_WORKSPACE/.github/workflows/PKGBUILD
            OUTDIR: $HOME/arch-packages
        - run: mv $HOME/arch-packages/*pkg.tar.zst furumi-x86_64.pkg.tar.zst
        - name: Upload Arch Package
          uses: actions/upload-artifact@v1
          with:
            name: arch_linux_furumi-x86_64.pkg.tar.zst
            path: ./furumi-x86_64.pkg.tar.zst
# make_deb:
#   name: Make Deb package
#   runs-on: ubuntu-latest
#   steps:
#     - name: Checkout code
#       uses: actions/checkout@v2
#     - name: Pre-build
#       run: sudo apt install -y libfuse-dev pkg-config && cargo install cargo-deb
#     - uses: actions/checkout@v2
#     - name: Build deb
#       run: cargo deb --output ./target/debian/furumi_amd64.deb
#     - name: Upload binary
#       uses: actions/upload-artifact@v1
#       with:
#         name: furumi_amd64.deb
#         path: ./target/debian/furumi_amd64.deb

  publish:
    name: Publish release
    needs: [make_bin, make_arch]
    runs-on: ubuntu-latest
    steps:
      - name: Get the version (git tag)
        id: get_version
        run: |
          echo ${GITHUB_REF/refs\/tags\/v/}
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
          echo ::set-output name=FULL_TAG::${GITHUB_REF/refs\/tags\//}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Download binary
        uses: actions/download-artifact@v1
        with:
          name: furumi
          path: ./
      - name: Download Arch Package
        uses: actions/download-artifact@v1
        with:
          name: arch_linux_furumi-x86_64.pkg.tar.zst
          path: ./
#     - name: Download Deb Package
#       uses: actions/download-artifact@v1
#       with:
#         name: furumi_amd64.deb
#         path: ./
      - name: Upload binary assets
        run: |
           wget https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2
           tar xjf linux-amd64-github-release.tar.bz2
           export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
#          ./bin/linux/amd64/github-release upload -u house-of-vanity -r furumi --tag ${{ steps.get_version.outputs.FULL_TAG }} --name furumi_${{ steps.get_version.outputs.VERSION }}_amd64.deb --file ./furumi_amd64.deb
           ./bin/linux/amd64/github-release upload -u house-of-vanity -r furumi --tag ${{ steps.get_version.outputs.FULL_TAG }} --name arch_linux_furumi-${{ steps.get_version.outputs.VERSION }}-x86_64.pkg.tar.zst --file ./furumi-x86_64.pkg.tar.zst
           ./bin/linux/amd64/github-release upload -u house-of-vanity -r furumi --tag ${{ steps.get_version.outputs.FULL_TAG }} --name furumi-${{ steps.get_version.outputs.VERSION }} --file ./furumi

#     # SCP to arch repo
#     - name: Copy package to repository
#       uses: appleboy/scp-action@master
#       with:
#         host: ${{ secrets.SSH_HOST }}
#         username: github_deploy
#         port: 22
#         key: ${{ secrets.SSH_KEY }}
#         source: "./furumi-x86_64.pkg.tar.zst"
#         target: "/srv/arch-repo/"
